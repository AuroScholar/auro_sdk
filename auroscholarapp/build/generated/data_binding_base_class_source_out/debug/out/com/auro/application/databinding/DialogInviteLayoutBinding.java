// Generated by data binding compiler. Do not edit!
package com.auro.application.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.auro.application.R;
import com.auro.application.core.util.uiwidget.RPTextView;
import com.auro.application.home.presentation.viewmodel.InviteFriendViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DialogInviteLayoutBinding extends ViewDataBinding {
  @NonNull
  public final RPTextView btninvite;

  @NonNull
  public final LinearLayout constraintLayout;

  @NonNull
  public final EditText editContact;

  @NonNull
  public final ImageView icClose;

  @NonNull
  public final ImageView icContact;

  @NonNull
  public final ImageView image;

  @NonNull
  public final ConstraintLayout imageLayout;

  @NonNull
  public final LinearLayout layoutHint;

  @NonNull
  public final RelativeLayout rlClose;

  @NonNull
  public final TextView txtInviteBy;

  @NonNull
  public final TextView txtShareWithOther;

  @NonNull
  public final TextView txtor;

  @Bindable
  protected InviteFriendViewModel mInviteFriendViewModel;

  protected DialogInviteLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      RPTextView btninvite, LinearLayout constraintLayout, EditText editContact, ImageView icClose,
      ImageView icContact, ImageView image, ConstraintLayout imageLayout, LinearLayout layoutHint,
      RelativeLayout rlClose, TextView txtInviteBy, TextView txtShareWithOther, TextView txtor) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btninvite = btninvite;
    this.constraintLayout = constraintLayout;
    this.editContact = editContact;
    this.icClose = icClose;
    this.icContact = icContact;
    this.image = image;
    this.imageLayout = imageLayout;
    this.layoutHint = layoutHint;
    this.rlClose = rlClose;
    this.txtInviteBy = txtInviteBy;
    this.txtShareWithOther = txtShareWithOther;
    this.txtor = txtor;
  }

  public abstract void setInviteFriendViewModel(
      @Nullable InviteFriendViewModel InviteFriendViewModel);

  @Nullable
  public InviteFriendViewModel getInviteFriendViewModel() {
    return mInviteFriendViewModel;
  }

  @NonNull
  public static DialogInviteLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_invite_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogInviteLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogInviteLayoutBinding>inflateInternal(inflater, R.layout.dialog_invite_layout, root, attachToRoot, component);
  }

  @NonNull
  public static DialogInviteLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_invite_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogInviteLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogInviteLayoutBinding>inflateInternal(inflater, R.layout.dialog_invite_layout, null, false, component);
  }

  public static DialogInviteLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogInviteLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (DialogInviteLayoutBinding)bind(component, view, R.layout.dialog_invite_layout);
  }
}
